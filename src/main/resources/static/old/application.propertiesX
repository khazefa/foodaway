# To activate specific application.properties file:
# -Dspring.profiles.active=[dev/prod] when running jar file
#
# example:
# VM Arguments:
# java -jar -Dspring.profiles.active=prod application.jar
#
# or
#
# Program Arguments:
# java -jar application.jar --spring.profiles.active=prod #--spring.config.location=c:\config
#
# for tomcat container deployment (war), can set system properties:
# ~/.bash_profile. export SPRING_PROFILES_ACTIVE=prod

spring.profiles.active=dev

## Server Properties (when using embedded tomcat)
server.port= 8080

server.tomcat.max-connections=10000
server.tomcat.max-http-form-post-size=2MB
server.tomcat.max-swallow-size=2MB
server.tomcat.threads.max=200

app.name=foodaway
welcome.message=API for ${app.name}

########################
## DB Config
########################
spring.datasource.url=jdbc:mysql://localhost:3306/foodaway?useSSL=false&useTimezone=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Jakarta
spring.datasource.username=root
spring.datasource.password=secret

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP settings
# spring.datasource.hikari.connection-timeout=60000
# spring.datasource.hikari.maximum-pool-size=5

########################
## Hibernate Properties
########################
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#ddl-auto possible values: none/validate/update/create/create-drop

# Hibernate ddl auto (create, create-drop, validate, update, none)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false

# Initialize the datasource with available DDL and DML scripts
# initialization-mode possible values: always/never
spring.datasource.initialization-mode=never

# if spring.datasource.initialization-mode=always, search for DML file name with this pattern, currently we put it in /resources
# please order file in sequence like they should be executed in query editor
# if spring.datasource.initialization-mode=never, this property will be ignored

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG
## logging.level.org.hibernate.type=TRACE
logging.file.max-history=10
logging.file.max-size=10MB
#logging.file=rmtools.log
#logging.path=/var/log/rmtools-log
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
#logging.level.root=WARN
#logging.level.com.baeldung=TRACE

########################
## Jackson Properties
########################
#spring.jackson.date-format=MM-dd-yyyy HH:mm:ss
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
#spring.jackson.time-zone=Asia/Jakarta
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

########################
## App Properties
########################
app.jwtSecret= Ara4tAborGaeZhh512!
#jwtExpirationMode: ms(millisecond), eod(end of day)
app.jwtExpirationMode =eod
app.jwtExpirationInMs = 86400000

#session timeout = lock timer
app.sessionTimeoutInSecond=3600
app.adminSessionTimeoutInSecond=900

#fetch size
app.fetch.size=9999

########################
## Mail Properties
########################
mail.server.host=smtp.gmail.com
mail.server.port=587
mail.server.protocol=smtp
#gmail bikin buat testing aja

#mail.server.username=user@domain.com
#mail.server.password=Pass44w0rd!
mail.server.personal=App Support
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.smtp.quitwait=false